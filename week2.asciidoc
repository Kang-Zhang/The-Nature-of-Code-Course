= Nature of Code: Week 2

Topics for this week include:

* <<week2_vectors,What is a vector?>
* <<week2_pvector, PVector class basics>>
* <<week2_vectormath, Vector math>>
* <<week2_physics, Physics 101: location,velocity,acceleration>>
* <<week2_newton, Newton's Laws: F=M*A>>
* <<week2_friction_drag, Friction and Drag>>
* <<week2_gravitational_attraction, Gravitational Attraction>>

[[week2_vectors]]
[preface]
== What is a vector?

video::http://player.vimeo.com/video/58734251[height='300', width='500', poster='generic_video.png']

* Read along in the http://natureofcode.com/book/chapter-1-vectors/[Nature of Code Chapter 1: Vectors]


[[week2_pvector]]
[preface]
== The PVector class

video::http://player.vimeo.com/video/58943395[height='300', width='500', poster='generic_video.png']

* Read along in the http://natureofcode.com/book/chapter-1-vectors/[Nature of Code Chapter 1: Vectors]

[[week2_vectormath]]
[preface]
== Basic Vector Math

video::http://player.vimeo.com/video/58943394[height='300', width='500', poster='generic_video.png']

video::http://player.vimeo.com/video/58943396[height='300', width='500', poster='generic_video.png']

* Read along in the http://natureofcode.com/book/chapter-1-vectors/[Nature of Code Chapter 1: Vectors]

chapter01_section8

[[week2_physics]]
[preface]
== Motion 101: Location, Velocity, Acceleration

video::http://player.vimeo.com/video/58943393[height='300', width='500', poster='generic_video.png']

* Read along in the http://natureofcode.com/book/chapter-1-vectors/#chapter01_section8[Nature of Code Section 1.8]

[[week2_newton]]
[preface]
== Newton's Laws of Motion: F = M*A

[[week2_friction_drag]]
[preface]
== Forces Case Study: Friction and Drag

[[week2_gravitational_attraction]]
[preface]
== Forces Case Study: Gravitational Attraction

[[week2_homework]]
[preface]
== Homework Week 2

Choose one or create your own. Post your work as a link in the comments below.

* Rework your motion sketch from week 1 using PVector.  Try incorporating the concept of _forces_ into the environment by affecting _only_ the acceleration.   Create a formula for calculating a dynamic acceleration, one that changes over time based on any number of factors.  What happens if you make more than one object via an array.
* Using forces, simulate a helium-filled balloon floating upward (and bouncing off the top of a window).  Can you add a wind force which changes over time, perhaps according to Perlin noise?
* Create an example where instead of objects bouncing off the edge of the wall, an invisible force pushes back on the objects to keep them in the window.  Can you weight the force according to how far the object is from an edge, i.e. the closer it is, the stronger the force?   
* Create pockets of air resistance / friction in a Processing sketch.  Try using circles instead of rectangles, i.e. pockets of mud (or ice).  What if you vary the strength (drag / friction coefficient) of each circle?   What if you make some of them the opposite of dragâ€”i.e., when you enter a given pocket you actually speed up instead of slow down?
* Can you create an example where all of the Mover objects are attracted to the mouse, but repel each other?  Think about how you need to balance the relative strength of the forces and how to most effectively use distance in your force calculations.
* Research a force not covered in class and implement it as a vector.
* Use the concept of forces to visualize some input (could be data, literal example would be get windspeed online and translate to a wind force in Processing, but feel free to think more abstractly)
* Build a sketch that has both "Movers" and "Attractors".  What if you make the Attractors invisible?  Can you create a pattern / design from the trails of objects moving around attractors?  See the http://processing.org/exhibition/works/metropop/[Metropop Denim project by Clayton Cubitt and Tom Carden] for an example.
*You'll need to create a web page to document your homework.*  It could be as simple as the auto-generated page created by Processing's JavaScript mode.  It could also be a blog post or something custom you design.
*After completing and documenting your homework add a link to it below using "add comment."*  (Note you need to be logged into Chimera in order for this to work.  If you have trouble, don't worry, just e-mail me and we'll sort it out in class.)  

Homework links go here:

[preface]
== Supplemental Reading

* http://natureofcode.com/book/chapter-1-vectors[The Nature of Code Chapter 1: Vectors]
* http://natureofcode.com/book/chapter-2-forces[The Nature of Code Chapter 2: Forces]
* http://www.lightandmatter.com/area1book1.html[Newtonian Physics, An Online Textbook] (This is long, you may find Chapter 4 to be particularly relevant to this week's discussion.)
* http://www.physicsclassroom.com/Class/newtlaws/newtltoc.html[The Physics Classroom -- Newton's Laws]
* http://www.amazon.com/gp/product/1584503300/[Mathematics and Physics for Programmers], Chapters 12 and 14, Danny Kodicek (suggested)






