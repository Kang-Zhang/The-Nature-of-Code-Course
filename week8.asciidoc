[[week8]]
[preface]
= Nature of Code: Week 8

Topics for this week include:

* <<week8_steering,Autonomous Agents and Steering Behaviors>>
* <<week8_seek, Seeking a Target>>
* <<week8_arrive, Arraving at a Target>>
* <<week8_flow, Flow Field Following>>
* <<week8_dot, The Dot Product>>
* <<week8_path, Path Following>>
* <<week8_group, Group Steering>>
* <<week8_combining, Combining and Weighting Multiple Steering Behaviors>>

* <<week8_homework, Week 8 Homework (onto final project)>>

[[week8_steering]]
[preface]
== Autonomous Agents and Steering Behaviors

video::http://player.vimeo.com/video/63089178[height='300', width='500', poster='generic_video.png']

[[week8_video1]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/[Chapter 6]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents[All Chapter 6 Examples]

* https://vimeo.com/22955812[Reas Process Compendium]
* http://books.google.com/books/?id=7KkUAT_q_sQC[Braitenberg Vehicles]
* http://www.red3d.com/cwr/steer/[Craig Reynolds' Steering Behaviors for Autonomous Characters]

[[week8_seek]]
[preface]
== Seeking a Target

video::http://player.vimeo.com/video/63089177[height='300', width='500', poster='generic_video.png']

[[week8_video2]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/#chapter06_section3[Chapter 6.3]
* http://www.red3d.com/cwr/steer/SeekFlee.html[Reynolds Demo]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_01_Seek[Example 6.1: Seek]

[[week8_arrive]]
[preface]
== Arriving at a Target

video::http://player.vimeo.com/video/63089179[height='300', width='500', poster='generic_video.png']

[[week8_video3]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/#chapter06_section4[Chapter 6.4]
* http://www.red3d.com/cwr/steer/Arrival.html[Reynolds Demo]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_02_Arrive[Example 6.2: Arrive]

[[week8_flow]]
[preface]
== Flow Field Following

video::http://player.vimeo.com/video/63101109[height='300', width='500', poster='generic_video.png']

[[week8_video4]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/#chapter06_section6[Chapter 6.6]
* http://www.red3d.com/cwr/steer/FlowFollow.html[Reynolds Demo]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_04_Flowfield[Example 6.4: Flow Field Following]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/Exercise_6_08_FlowField3DNoise[Exercise 6.8: Flow Field 3D Noise]

[[week8_dot]]
[preface]
== Vector Dot Product

video::http://player.vimeo.com/video/63101108[height='300', width='500', poster='generic_video.png']

[[week8_video5]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/#chapter06_section7[Chapter 6.7]
* http://en.wikipedia.org/wiki/Dot_product[Dot Product Wikipedia]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/Exercise_6_09_AngleBetween[Exercise 6.9: Angle Between]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/SimpleScalarProjection[Simple Scalar Projection demo]


[[week8_path]]
[preface]
== Path Following

video::http://player.vimeo.com/video/63928276[height='300', width='500', poster='generic_video.png']

[[week8_video6]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/#chapter06_section8[Chapter 6.8]
* http://www.red3d.com/cwr/steer/PathFollow.html[Reynolds Demo]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_05_PathFollowingSimple[Example 6.5: Simple Path Following (straight line)]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_06_PathFollowing[Example 6.6: Path Following (with multi-point path)]

[[week8_group]]
[preface]
== Group Steering Behaviors

video::http://player.vimeo.com/video/63928275[height='300', width='500', poster='generic_video.png']

[[week8_video7]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/#chapter06_section11[Chapter 6.11]
* http://www.red3d.com/cwr/steer/Doorway.html[Doorway Reynolds Demo]
* http://www.red3d.com/cwr/steer/CrowdPath.html[Crowd Path Following Reynolds Demo]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/Alignment[Alignment Example]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_07_Separation[Example 6.7: Separation]

[[week8_combining]]
[preface]
== Combining Multiple Steering Behaviors

video::http://player.vimeo.com/video/63928274[height='300', width='500', poster='generic_video.png']

[[week8_video8]]
[role="shoutout"]
.Confused by this video?
****
Post any questions or comments here.
****

* Read along: http://natureofcode.com/book/chapter-6-autonomous-agents/#chapter06_section12[Chapter 6.12]
* http://www.red3d.com/cwr/boids/[Craig Reynolds Boids]

* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_08_SeparationAndSeek[Example 6.8: Separation and Seek]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/Exercise_6_13_CrowdPathFollowing[Exercise 6.13: Crowd Path Following]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/NOC_6_09_Flocking[Example 6.9: Flocking]
* https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/Processing/chp6_agents/Exercise_6_17_View[Exercise 6.17: Flake "View" Rule]


[[week8_homework]]
[preface]
== Homework Week 8

For the remainder of this semester you should be working on your final project.  We'll do this in three stages.

1. Final Project Experimentation -- Create several quick and dirty sketches that implement the beginnings or seeds of an idea.
2. Final Project Proposal -- develop a plan and proposal.
3. Final Project -- Build the final project and present in class!

For your week 8 homework, do #1 above.   We'll worry about #2 and #3 later. If you are stuck for an idea, I'll include below a long list of suggestions for exercises that might lead you towards an idea from the material in chapter 6.

[[homework_week8_links]]
[role="shoutout"]
.Post your homework
****
Post a link to your homework assignment here.
****

* Steering Behaviors
** Implement seeking a moving target, often referred to as “pursuit.“  In this case, your desired velocity won't point towards the object's current location, rather its “future“ location as extrapolated based on its current velocity.
** Create a sketch where a Vehicle's maximum force and maximum speed do not remain constant, but rather vary according to environmental factors.
** Create a flow field that changes over time
** Create a flow field based on image data
** Expand the path following example to have a path that changes over time.  Can the points that define the path itself have their own steering behaviors?
** Create something inspired by Braitenberg's Vehicles
* Flocking
** Implement Flake's "View" rule, described in Computational Beauty of Nature
** Create a flocking simulation where all of the parameters (separation weight, cohesion weight, alignment weight, maximum force, maximum speed) change over time.  They could be controlled by Perlin noise or by user interaction.
** Build a creature with countless steering behaviors (as many as you can reasonably add).  Think about ways to vary the weights of these behaviors so that you can dial those behaviors up and down, mixing and matching on the fly.    How are creatures' initial weights set?  What rules drive how the weights change over time?
** Use applyForce() in Box2D or addForce() in Toxiclibs to create a flocking simulation in one of those physics engines
** Complex systems can be nested.  Can you design a single creature out of a flock of boids?  And can you then make a flock of those creatures?
